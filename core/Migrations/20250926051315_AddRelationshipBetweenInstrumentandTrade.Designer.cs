// <auto-generated />
using System;
using Data.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250926051315_AddRelationshipBetweenInstrumentandTrade")]
    partial class AddRelationshipBetweenInstrumentandTrade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.Domain.InstrumentAPI.Instrument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Ask")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("AssetClass")
                        .HasColumnType("int");

                    b.Property<decimal>("Bid")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<int>("Exchange")
                        .HasColumnType("int");

                    b.Property<decimal>("LastPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("Models.Domain.PortfolioAPI.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PortfolioCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Models.Domain.TradeAPI.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Counterparty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("InstrumentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("TradeDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TradeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("Models.Domain.TradeAPI.Trade", b =>
                {
                    b.HasOne("Models.Domain.InstrumentAPI.Instrument", "Instrument")
                        .WithMany("Trades")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Domain.PortfolioAPI.Portfolio", "Portfolio")
                        .WithMany("Trades")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Models.Domain.InstrumentAPI.Instrument", b =>
                {
                    b.Navigation("Trades");
                });

            modelBuilder.Entity("Models.Domain.PortfolioAPI.Portfolio", b =>
                {
                    b.Navigation("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
